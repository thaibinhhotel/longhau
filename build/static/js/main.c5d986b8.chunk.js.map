{"version":3,"sources":["components/ListOption.js","components/ConfirmFinalMessage.js","components/RoomDetailCheckin.js","components/RoomDetailCheckout.js","components/ListRoomRows.js","components/sha256.js","containers/IndexPage.js","containers/LoginPage.js","serviceWorker.js","index.js"],"names":["formatNumber","num","toString","replace","ListOption","props","console","log","state","items","listoptionIds","slice","optionListSelected","length","option","description","optionid","price","quantity","total","totalOptions","forEach","method","bind","listOptionSlt","this","listOptionSltIds","map","item","push","listOptionIDsTmp","concat","listOptionIDsMerge","filter","pos","indexOf","setState","listoptionIdstmp","listoption","flagNew","i","startsWith","parseInt","onChangeOption","pop","event","data","isNaN","value","toast","info","tmp","optionId","val","total_option","count","Segment","placeholder","textAlign","Grid","columns","relaxed","stackable","Column","Form","Label","Dropdown","options","selection","onChange","handleChangeDropdown","Input","disabled","type","max","min","handleChangeQuantity","Divider","horizontal","size","handleOptionOtherChange","Statistic","Value","Button","content","icon","color","onClick","handleAddRow","Group","Table","striped","bordered","hover","style","width","label","handleRemoveRow","floated","key","Math","random","float","as","tag","hidden","React","Component","Moment","locale","momentLocalizer","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","RoomDetailCheckin","show","open","handleConfirm","handleCancel","CheckinTimeSelected","roominfo","fromTime","Date","CheckoutTimeSelected","toTime","roomCurrentClass","moreOptionId","JSON","parse","roomDetailOpen","isSubmiting","CheckinDate","substr","getFullYear","getMonth","getDate","CheckinTime","getHours","getMinutes","CheckoutDate","CheckoutTime","checkoutInfo","checkinTime","checkoutTime","roomClass","totalOptionPrice","totalRoomPrice","totalPrice","noteText","roomId","roomid","id","stringify","CheckoutSubmitRoom","error","UpdateCheckInRoom","status","stt","statusList","text","disableCheckout","CheckoutRoom","action","formatted_date","formattedcheckout_date","current_Checkoutdatetime","current_datetime","getSeconds","encoded","result","fetch","body","headers","then","response","a","msgerr","json","roomTypeOther","imgsrc","Modal","closeIcon","onClose","trigger","className","boxShadow","handleShowModal","src","alt","Header","marginLeft","fontWeight","Content","image","scrolling","height","Image","wrapped","TextArea","minHeight","Description","roomDescription","getStatusDes","handleChangeInputDate","name","handleChangeInputTime","onChangePickedTime","padded","display","handleChangeInputCheckoutDate","handleChangeInputCheckoutTime","onChangePickedCheckoutTime","primary","getCheckoutInfo","loading","basic","labelPosition","iconPosition","Select","fluid","handleChangeTypeIDSelect","ribbon","handleChangeOption","Actions","checkinRoomSubmit","handleHideModal","Confirm","Dimmer","active","inverted","Loader","header","onCancel","onConfirm","checkoutRoomSubmit","ListRoomRows","room","roomsInfo","Array","prototype","call","renderDetail","backgroundColor","renderRow","encrypt","string","RotateLeft","lValue","iShiftBits","AddUnsigned","lX","lY","lX4","lY4","lX8","lY8","lResult","FF","b","c","d","x","s","ac","y","z","F","GG","G","HH","H","II","I","WordToHex","lCount","WordToHexValue","WordToHexValue_temp","k","AA","BB","CC","DD","lWordCount","lMessageLength","lNumberOfWords_temp1","lNumberOfWords","lWordArray","lBytePosition","lByteCount","charCodeAt","ConvertToWordArray","utftext","n","String","fromCharCode","Utf8Encode","toLowerCase","defaultProps","IndexPage","isLoadedRooms","isLoadedParam","rooms","roomIds","statusIds","roomTypeOtherIds","roomidselected","statusSelected","res","strs","ids","tmp2","newstr","success","position","POSITION","TOP_RIGHT","handleClearSearching","getListRoomDetails","listRoomIds","listStatusIds","styleDisable","attached","widths","handleChangeRoomIDSelect","handleChangeStatusIDSelect","message","ipadd","userInfo","getIPAddress","getListStatus","getroomTypeOther","getlistoption","renderSearchForm","renderListRooms","LoginPage","errUserMsg","errPassMsg","errpinCode","token","email","ipAddress","userName","passWord","pinCode","isVerified","isChecking","isValid","passWordHash","username","pincode","sessionStorage","setItem","setTokenValid","handleChangeUser","handleChangePass","handleChangePinCode","submitLogin","verifyEmail","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ThaiBinhHotel","isTokenValid","getItem","checkTokenValid","getIPAndCheckToken","fontSize","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c5d986b8.chunk.js","sourcesContent":["import React from 'react'\nimport {Button, Form, Input, Dropdown, Divider, Grid, Label, Statistic} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport TableBT from 'react-bootstrap/Table';\nimport {Segment} from 'semantic-ui-react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\n\nfunction formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport class ListOption extends React.Component {\n    constructor(props) {\n        console.log('constructor');\n        super(props);\n        this.state = {\n            items: this.props.listoptionIds.slice(0, this.props.optionListSelected.length),\n            option: {\n                description: '',\n                optionid: null,\n                price: 0,\n                quantity: 0,\n                total: 0\n            },\n            listoptionIds: [],\n            optionListSelected: [],\n            totalOptions: 0,\n        };\n        [\n            'handleChangeDropdown',\n            'handleChangeQuantity',\n            'handleAddRow',\n            'handleRemoveRow',\n            'handleOptionOtherChange'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount');\n        let listOptionSlt = this.props.optionListSelected;\n        let listOptionSltIds = [];\n        listOptionSlt && listOptionSlt.map(item => {\n            listOptionSltIds.push(item[\"optionid\"])\n        })\n\n        var listOptionIDsTmp = listOptionSltIds.concat(this.props.listoptionIds);\n        var listOptionIDsMerge = listOptionIDsTmp.filter((item, pos) => listOptionIDsTmp.indexOf(item) === pos);\n\n        this.setState({\n            items: listOptionIDsMerge.slice(0, this.props.optionListSelected.length)\n        });\n\n\n        //get List option for select\n        var listoptionIdstmp = {};\n        var listoptionIds = [];\n\n        this.props.listoption.map(item => {\n            listoptionIdstmp = {}\n            listoptionIdstmp['key'] = item['optionId'];\n            listoptionIdstmp['text'] = item['description'];\n            listoptionIdstmp['value'] = item['optionId'];\n            listoptionIds.push(listoptionIdstmp);\n        });\n        this.setState({\n            listoptionIds: listoptionIds,\n        });\n\n        //Set value for State: optionListSelected\n        this.setState({\n            optionListSelected: this.props.optionListSelected\n        });\n\n    }\n\n\n    handleAddRow() {\n        console.log('handleAddRow');\n        const option = {...this.state.option};\n        let optionListSelected = this.state.optionListSelected;\n        let flagNew = true;\n        for (let i = 0; i < optionListSelected.length; i++) {\n            if (optionListSelected[i].optionid == option.optionid) {\n                if(optionListSelected[i].description.startsWith(\"Other\")){\n                    optionListSelected[i].quantity = 1;\n                    optionListSelected[i].total = option.total;\n                } else {\n                    optionListSelected[i].quantity = parseInt(option.quantity) + parseInt(optionListSelected[i].quantity);\n                    optionListSelected[i].total = parseInt(optionListSelected[i].quantity) * parseInt(optionListSelected[i].price);\n                }\n                flagNew = false;\n                break;\n            }\n        }\n        console.log(optionListSelected);\n        if (flagNew) {\n            optionListSelected.push(option);\n        }\n        this.setState({\n            optionListSelected: optionListSelected\n        });\n\n        this.props.onChangeOption(optionListSelected);\n    }\n\n    handleRemoveRow() {\n        console.log('handleRemoveRow');\n        const optionListSelected = this.state.optionListSelected;\n        optionListSelected.pop();\n        this.setState({\n            optionListSelected: optionListSelected\n        });\n\n        this.props.onChangeOption(optionListSelected);\n    }\n\n    handleChangeQuantity(event, data) {\n        console.log('handleChangeQuantity');\n        if(!data){\n            return;\n        }\n        if (isNaN(data.value)) {\n            return\n        } else {\n            if (parseInt(data.value) < 0 || parseInt(data.value) > 100) {\n                toast.info('Số lượng phải từ 0 - 100');\n                return;\n            }\n        }\n        let option = {...this.state.option};\n        option['quantity'] = parseInt(data.value);\n        option['total'] = parseInt(data.value) * parseInt(option['price']);\n\n        this.setState({\n            option: option,\n        });\n    }\n\n    handleChangeDropdown(event, data) {\n        console.log('handleChangeDropdown');\n        const listoption = this.props.listoption;\n        let tmp = [];\n        for (let i = 0; i < listoption.length; i++) {\n            if (listoption[i].optionId == data.value) {\n                tmp = [];\n                tmp = listoption[i];\n                tmp['optionid'] = listoption[i].optionId;\n                tmp['quantity'] = 1;\n                tmp['total'] = tmp['price'];\n                break;\n            }\n        }\n        this.setState({\n            option: tmp,\n        });\n    }\n\n    handleOptionOtherChange(val, data){\n        let tmp = {...this.state.option};\n        tmp['total'] = (parseInt(data.value) ? parseInt(data.value) : 0);\n        console.log(tmp);\n        this.setState({\n           option: tmp\n        });\n    }\n\n    render() {\n        console.log('render');\n        const items = this.state.optionListSelected;\n\n        // console.log(items);\n        // console.log(this.props.listoptionIds);\n        // console.log(this.props.listoption);\n        // console.log(this.props.optionListSelected);\n        // console.log(this.state.listoptionIds)\n        // console.log(this.state.optionListSelected);\n        // debugger;\n        var total_option = 0;\n        var count = 0;\n        return (\n            <div>\n                <div>\n                    <Segment placeholder textAlign='center'>\n                        <Grid columns={1} relaxed='very' stackable>\n                            <Grid.Column>\n                                <Form>\n                                    <Label>Loại SP:</Label>\n                                    <Dropdown\n                                        options={this.state.listoptionIds}\n                                        value={this.state.option.optionid}\n                                        placeholder='Choose an option'\n                                        selection\n                                        onChange={this.handleChangeDropdown}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <Label>Số lượng:</Label>\n                                    <Input\n                                        disabled={this.state.option.optionid == 0 || this.state.option.optionid == null || this.state.option.description.startsWith(\"Other\")}\n                                        placeholder='...'\n                                        type='number'\n                                        max='100'\n                                        min='0'\n                                        value={this.state.option.quantity}\n                                        onChange={this.handleChangeQuantity}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <Label> Số tiền/1\n                                        sp: <b>{formatNumber(this.state.option.price)} VND</b>\n                                    </Label>\n                                    <br/>\n                                    <br/>\n                                    {/*<Label style={{display: this.state.errMessQuantity}} basic color='red'*/}\n                                    {/*       pointing='left'>*/}\n                                    {/*    Số lượng từ phải từ 0 - 100*/}\n                                    {/*</Label>*/}\n                                </Form>\n\n                                <Divider horizontal>Total</Divider>\n\n                                {this.state.option.description.startsWith(\"Other\")\n                                    ? <div>\n                                        <Input size=\"small\" type=\"number\" value={this.state.option.total} onChange={this.handleOptionOtherChange}/>\n                                        <br/><br/>\n                                     </div>\n                                    : <Statistic horizontal size='tiny'>\n                                        <Statistic.Value>{formatNumber(this.state.option.total)}</Statistic.Value>\n                                        <Statistic.Label>vnd</Statistic.Label>\n                                     </Statistic>\n                                }\n\n                                <Button content='Add' icon='plus square' size='big' color='grey'\n                                        onClick={this.handleAddRow}\n                                        disabled={this.state.option.optionid == 0 || this.state.option.optionid == null || this.state.option.quantity == 0 || this.state.option.total == 0}/>\n                            </Grid.Column>\n                        </Grid>\n                    </Segment>\n                </div>\n                <Button.Group>\n                </Button.Group>\n                {this.state.optionListSelected ? <TableBT size=\"sm\" striped bordered hover style={{width: '100%'}}>\n                    <thead>\n                    <tr>\n                        <th></th>\n                        <th>\n                            <Button\n                                label='Remove'\n                                disabled={this.state.optionListSelected.length === 0}\n                                icon='minus square'\n                                onClick={this.handleRemoveRow}\n                                floated='right'\n                            />\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.optionListSelected.map((item) => (\n                        <tr key={Math.random()}>\n                            {(item) && (\n                                [<td key={Math.random()}>\n                                    <b>{item.quantity} - {item.description}</b>\n                                </td>,\n                                    <td key={Math.random()}>\n                                        <b style={{float: 'right'}}><Label as='a' color='olive' tag\n                                                                           size='large'>{formatNumber(item.total)} VND</Label></b>\n                                        <p hidden>{count = count + 1} {total_option = total_option + item.total}</p>\n                                    </td>]\n                            )\n                            }\n                        </tr>\n                    ))}\n                    </tbody>\n                    <tfoot>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <b style={{float: 'right'}}><Label as='a' color='yellow' tag\n                                                               size='large'>{formatNumber(total_option)} VND</Label></b>\n                        </td>\n                    </tr>\n                    </tfoot>\n                </TableBT> : <div></div>\n                }\n            </div>\n        )\n    }\n}\n\nListOption.propTypes = {\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    optionListSelected: PropTypes.array,\n    onChangeOption: PropTypes.func,\n}","import React, {Component} from 'react'\nimport {Button, Header, Icon, Modal, Loader, Dimmer} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport {toast} from \"react-toastify\";\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class ConfirmFinalMessage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalOpen: true,\n            checkoutInfo: this.props.checkoutInfo\n        };\n\n        this.checkoutRoomSubmit = this.checkoutRoomSubmit.bind(this);\n    }\n\n    // componentDidMount() {\n    //     this.getCheckoutInfo();\n    // }\n    //\n    // componentWillReceiveProps(nextProps) {\n    //     console.log(nextProps);\n    // }\n\n    handleOpen = () => {\n        this.setState({modalOpen: true});\n        // this.props.getRoomCheckoutInfo();\n    }\n\n    handleClose = () => this.setState({modalOpen: false})\n\n    async checkoutRoomSubmit() {\n\n    }\n\n    render() {\n        // this.getCheckoutInfo();\n        console.log(this.props.checkoutInfo);\n\n\n        return (\n            <Modal\n                trigger={<Button style={{display: (this.props.roominfo.status == 0 ? '' : 'none')}} primary\n                                 onClick={this.handleOpen}>CheckOut</Button>}\n                open={this.state.modalOpen}\n                onClose={this.handleClose}\n                basic\n                size='small'\n                centered\n            >\n                <Header icon='browser' content='Check final list.'/>\n\n                    <Modal.Content>\n                        <h3>\n                            This website uses cookies to ensure the best user experience.\n\n                        </h3>\n                        <Modal.Actions>\n                            <Button color='green' inverted>\n                                <Icon name='checkmark'/> Confirm & CheckOut\n                            </Button>\n                            <Button color='green' onClick={this.handleClose}  inverted>\n                                <Icon name='checkmark'/> Close\n                            </Button>\n                        </Modal.Actions>\n                    </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nConfirmFinalMessage.propTypes = {\n    checkoutInfo: PropTypes.object,\n    CheckoutRoom: PropTypes.func,\n    getRoomCheckoutInfo: PropTypes.func\n}","import React from 'react'\nimport {\n    Button,\n    Form,\n    Header,\n    Image,\n    Input,\n    Label,\n    Modal,\n    Segment,\n    Statistic,\n    TextArea,\n    Confirm, Loader, Dimmer\n} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport {ListOption} from '../components/ListOption';\nimport {ConfirmFinalMessage} from '../components/ConfirmFinalMessage';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\nimport {ListRoomRows} from \"./ListRoomRows\";\n\nMoment.locale('vn')\nmomentLocalizer()\n\nfunction formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class RoomDetailCheckin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            CheckinTimeSelected: (this.props.roominfo.fromTime ? new Date(this.props.roominfo.fromTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            CheckoutTimeSelected: (this.props.roominfo.toTime ? new Date(this.props.roominfo.toTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            roomCurrentClass: (this.props.roominfo.roomCurrentClass ? this.props.roominfo.roomCurrentClass : ''),\n            optionListSelected: (this.props.roominfo.moreOptionId ? JSON.parse(this.props.roominfo.moreOptionId) : ''),\n            roomDetailOpen: false,\n            isSubmiting: false,\n            CheckinDate: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckinTime: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes()))),\n            CheckoutDate: (this.props.roominfo.toTime ? this.props.roominfo.toTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckoutTime: (this.props.roominfo.toTime ? this.props.roominfo.toTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes()))),\n            checkoutInfo: {\n                checkinTime: '',\n                checkoutTime: '',\n                roomClass: '',\n                totalOptionPrice: 0,\n                totalRoomPrice: 0,\n                totalPrice: 0,\n                CheckinTimeSelected: '',\n                CheckoutTimeSelected: '',\n            },\n            noteText: this.props.roominfo.noteText,\n        };\n\n        [\n            'checkinRoomSubmit',\n            'getStatusDes',\n            'onChangePickedTime',\n            'handleChangeTypeIDSelect',\n            'handleChangeOption',\n            'handleShowModal',\n            'handleHideModal',\n            'handleChangeInputDate',\n            'handleChangeInputTime',\n            'handleChangeInputCheckoutDate',\n            'handleChangeInputCheckoutTime',\n            'onChangePickedCheckoutTime',\n            'CheckoutRoom',\n            'getCheckoutInfo',\n            'checkoutRoomSubmit',\n            'disableCheckout'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    show = () => this.setState({open: true})\n    handleConfirm = () => this.setState({open: false})\n    handleCancel = () => this.setState({open: false})\n\n    checkoutRoomSubmit() {\n        this.setState({\n            isSubmiting: true,\n        });\n        let action = 'checkout';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let noteText = this.state.noteText;\n        let checkinTime = '';\n        let checkoutTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            checkoutTime = this.state.CheckoutDate + \" \" + this.state.CheckoutTime;\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n            checkoutTime = this.state.CheckoutTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        let totalRoomPrice = this.state.checkoutInfo.totalRoomPrice;\n        let totalPrice = this.state.checkoutInfo.totalPrice;\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!checkoutTime) {\n            toast.error('Bạn chưa chọn giờ ra!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        this.props.CheckoutSubmitRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText);\n    }\n\n    async checkinRoomSubmit() {\n        this.setState({\n            isSubmiting: true\n        });\n        let action = 'checkin';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let noteText = this.state.noteText;\n\n        let checkinTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            console.log(checkinTime)\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        await this.props.UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText);\n        // await sleep(5000);\n        this.setState({\n            roomDetailOpen: false,\n            isSubmiting: false\n        });\n    }\n\n    getStatusDes(status = '') {\n        let stt = this.props.statusList;\n        for (var i = 0; i < stt.length; i++) {\n            if (stt[i].key == status) {\n                return stt[i].text;\n            }\n        }\n    }\n\n    disableCheckout() {\n        let checkoutInfo = {...this.state.checkoutInfo};\n        checkoutInfo.totalPrice = 0;\n        this.setState({\n            checkoutInfo: checkoutInfo\n        });\n    }\n\n    onChangePickedTime(val) {\n        this.disableCheckout();\n        this.setState({\n            CheckinTimeSelected: val\n        });\n    }\n\n    onChangePickedCheckoutTime(val) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutTimeSelected: val\n        });\n    }\n\n    handleChangeTypeIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.disableCheckout();\n        this.setState({\n            roomCurrentClass: val['value']\n        });\n    }\n\n    handleChangeOption(data = []) {\n        let checkoutInfo = {...this.state.checkoutInfo};\n        let total = 0;\n        for (var i = 0; i < data.length; i++) {\n            total = total + data[i].total;\n        }\n        checkoutInfo['totalPrice'] = checkoutInfo[\"totalRoomPrice\"] + total;\n        this.setState({\n            optionListSelected: data,\n            checkoutInfo: checkoutInfo\n        });\n    }\n\n    handleShowModal() {\n        this.setState({\n            roomDetailOpen: true\n        });\n    }\n\n    handleHideModal() {\n        this.setState({\n            roomDetailOpen: false\n        });\n    }\n\n    handleChangeInputDate(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckinDate: data.value\n        });\n    }\n\n    handleChangeInputCheckoutDate(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutDate: data.value\n        });\n    }\n\n    handleChangeInputCheckoutTime(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutTime: data.value\n        });\n    }\n\n    handleChangeInputTime(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckinTime: data.value\n        });\n    }\n\n    getCheckoutInfo() {\n        this.setState({\n            isSubmiting: true,\n        });\n        let action = 'getTotalConfirm';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let checkinTime = '';\n        let checkoutTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            checkoutTime = this.state.CheckoutDate + \" \" + this.state.CheckoutTime;\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n            checkoutTime = this.state.CheckoutTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!checkoutTime) {\n            toast.error('Bạn chưa chọn giờ ra!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        if (checkinTime > checkoutTime) {\n            toast.error('Giờ ra phải sau giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        this.CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime);\n    }\n\n    async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime) {\n        let formatted_date = '';\n        let formattedcheckout_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n            formattedcheckout_date = checkoutTime;\n        } else {\n            let current_datetime = checkinTime;\n            let current_Checkoutdatetime = checkoutTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n            formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n        }\n\n        // console.log(formatted_date);\n        // console.log(formattedcheckout_date);\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&options=\" + options +\n            \"&totalOptionPrice=\" + totalOptionPrice +\n            \"&checkoutTime=\" + formattedcheckout_date;\n        let result = '';\n        if (action == \"getTotalConfirm\") {\n            await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkoutinfo', {\n                method: 'POST',\n                body: encoded,\n                headers: {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then(async function (response) {\n                let msgerr = '';\n\n                await response.json().then(function (data) {\n                    data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : result = data['data'];\n                });\n                let stt = response.status;\n                if (stt == 200) {\n                    if (!msgerr) {\n                        console.log(result);\n                    } else {\n                        toast.error(\"Error:\" + JSON.stringify(msgerr));\n                    }\n                } else {\n                    toast.error(\"Something is wrong, please check log for detail!\");\n                }\n\n            }).then(() => {\n                this.setState({\n                    checkoutInfo: {\n                        checkinTime: checkinTime,\n                        checkoutTime: checkoutTime,\n                        roomClass: roomClass,\n                        totalOptionPrice: totalOptionPrice,\n                        totalRoomPrice: result['roomPrice'],\n                        totalPrice: result['totalPrice'],\n                        CheckinTimeSelected: formatted_date,\n                        CheckoutTimeSelected: formattedcheckout_date,\n                    },\n                    isSubmiting: false\n                });\n            })\n        }\n    }\n\n    render() {\n        const {roominfo, roomTypeOther} = this.props;\n        let imgsrc = roominfo.roomid ? 'images/room' + roominfo.roomid + '.png' : 'images/room101.png';\n\n        return (\n            <Modal style={{width: '100%'}} open={this.state.roomDetailOpen} closeIcon\n                   onClose={() => {\n                       this.setState({roomDetailOpen: false})\n                   }}\n                   trigger={<a className=\"image fit\"><img style={{boxShadow: '10px 10px 5px #ccc'}}\n                                                          onClick={this.handleShowModal}\n                                                          src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>}>\n                <Modal.Header>\n                    <Statistic style={{marginLeft: '30%'}} horizontal size='tiny'>\n                        <Statistic.Value style={{\n                            color: \"#00bfff\",\n                            fontWeight: 'bold'\n                        }}>{formatNumber(this.state.checkoutInfo.totalPrice)}</Statistic.Value>\n                        <Statistic.Label>vnd</Statistic.Label>\n                    </Statistic>.\n                </Modal.Header>\n                <Modal.Content image scrolling style={{height: '450%'}}>\n                    <Image size='large' src={imgsrc} wrapped>\n                        <Form>\n                            <TextArea placeholder='Ghi chú...' style={{minHeight: 100}}\n                                      value={this.state.noteText} onChange={(event, data) => {\n                                this.setState({noteText: data.value})\n                            }}/>\n                        </Form>\n                    </Image>\n                    <Modal.Description style={{width: '100%'}}>\n                        <Header>{roominfo.roomDescription}</Header>\n                        <b>\n                            Status: {this.getStatusDes(roominfo.status)}\n                        </b>\n                        <hr/>\n                        <label>\n                            <b>Checkin:</b>\n                        </label>\n                        <div>\n                            {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckinTimeSelected}\n                                                               onChange={this.onChangePickedTime}/> :\n                                <div style={{width: '100%'}}><Input size='huge' style={{width: '50%'}}\n                                                                    onChange={this.handleChangeInputDate}\n                                                                    value={this.state.CheckinDate} type=\"date\"\n                                                                    name=\"CheckinDate\"/>\n                                    <Input size='huge' style={{width: '50%'}} onChange={this.handleChangeInputTime}\n                                           value={this.state.CheckinTime} type=\"time\" name=\"CheckinTime\"/>\n                                </div>\n                            }\n                        </div>\n                        <Segment padded style={{display: this.props.roominfo.status == 0 ? '' : 'none'}}>\n                            <div>\n                                <label>\n                                    <b style={{color: \"#00bfff\"}}>CheckOut:</b>\n                                </label>\n                                {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckoutTimeSelected}\n                                                                   onChange={this.onChangePickedCheckoutTime}/> :\n                                    <div style={{width: '100%'}}><Input size='huge' style={{width: '50%'}}\n                                                                        onChange={this.handleChangeInputCheckoutDate}\n                                                                        value={this.state.CheckoutDate} type=\"date\"\n                                                                        name=\"CheckoutDate\"/>\n                                        <Input size='huge' style={{width: '50%'}}\n                                               onChange={this.handleChangeInputCheckoutTime}\n                                               value={this.state.CheckoutTime} type=\"time\" name=\"CheckoutTime\"/>\n                                    </div>\n                                }\n                                <br/>\n                                <Button primary style={{float: 'left', width: '45%'}} size=\"large\"\n                                        onClick={this.getCheckoutInfo} disabled={this.state.isSubmiting}>\n                                    Check Price:\n                                </Button>\n                                {this.state.isSubmiting ?\n                                    <Input size='large' loading icon='user' disabled\n                                           value={formatNumber(this.state.checkoutInfo.totalRoomPrice)}\n                                           label={{basic: true, content: 'vnd'}}\n                                           labelPosition='right'\n                                           iconPosition='left' style={{width: \"40%\"}} placeholder='Search...'/>\n                                    :\n                                    <Input size=\"large\" icon='money bill alternate outline' disabled\n                                           value={formatNumber(this.state.checkoutInfo.totalRoomPrice)}\n                                           label={{basic: true, content: 'vnd'}}\n                                           labelPosition='right'\n                                           iconPosition='left' style={{width: \"40%\"}} placeholder='Search...'/>\n                                }\n                            </div>\n                        </Segment>\n                        <hr/>\n                        <div>\n                            <label>\n                                <b>Room Type:</b>\n                            </label>\n                            <Form.Select\n                                fluid\n                                icon=''\n                                size=\"huge\"\n                                // label='Room Type:'\n                                value={this.state.roomCurrentClass}\n                                options={roomTypeOther}\n                                onChange={this.handleChangeTypeIDSelect}\n                                placeholder='Type'\n                            />\n                        </div>\n                        <hr/>\n                        <Label as='a' color='teal' ribbon>\n                            Thêm Sản Phẩm:\n                        </Label>\n                        <ListOption listoptionIds={this.props.listoptionIds}\n                                    listoption={this.props.listoption}\n                                    onChangeOption={this.handleChangeOption}\n                                    optionListSelected={this.state.optionListSelected ? this.state.optionListSelected : []}/>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary onClick={this.show}\n                            disabled={this.state.isSubmiting || this.state.checkoutInfo.totalPrice == 0}\n                            style={{display: (this.props.roominfo.status == 0 ? '' : 'none')}}>\n                        CheckOut\n                    </Button>\n                    <Button primary onClick={this.checkinRoomSubmit} disabled={this.state.isSubmiting}>\n                        {this.props.roominfo.status == 1 ? \"CheckIn\" : \"Update\"}\n                    </Button>\n                    <Button primary onClick={this.handleHideModal} disabled={this.state.isSubmiting}>\n                        Close\n                    </Button>\n                </Modal.Actions>\n                <Confirm\n                    open={this.state.open}\n                    content={this.state.isSubmiting ?\n                        <Dimmer active inverted>\n                            <Loader size='large'>Hệ thống đang xử lý.</Loader>\n                        </Dimmer>\n                        :\n                        <div style={{textAlign: 'center'}}>\n                            <Segment>\n                                <h3>\n                                    <table>\n                                        <tbody>\n                                        {!isMobile.iOS() ?\n                                            [<tr key='1'>\n                                                <td>Giờ vào:</td>\n                                                <td>{this.state.checkoutInfo.CheckinTimeSelected}</td>\n                                            </tr>,\n                                                <tr key='2'>\n                                                    <td>Giờ ra:</td>\n                                                    <td>{this.state.checkoutInfo.CheckoutTimeSelected}</td>\n                                                </tr>]\n                                            :\n                                            [<tr key='3'>\n                                                <td>Giờ vào:</td>\n                                                <td>{this.state.checkoutInfo.CheckinTimeSelected}</td>\n                                            </tr>,\n                                                <tr key='4'>\n                                                    <td>Giờ ra:</td>\n                                                    <td>{this.state.checkoutInfo.CheckoutTimeSelected}</td>\n                                                </tr>\n                                            ]}\n                                        <tr>\n                                            <td>Tiền ở:</td>\n                                            <td>{formatNumber(this.state.checkoutInfo.totalRoomPrice)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tiền khác:</td>\n                                            <td>{formatNumber((this.state.checkoutInfo.totalPrice - this.state.checkoutInfo.totalRoomPrice))}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tổng tiền:</td>\n                                            <td>{formatNumber(this.state.checkoutInfo.totalPrice)}</td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </h3>\n                            </Segment>\n                        </div>\n                    }\n                    header='Confirm CheckOut'\n                    onCancel={this.handleCancel}\n                    onConfirm={this.checkoutRoomSubmit}\n                />\n            </Modal>\n        );\n    }\n}\n\n\nRoomDetailCheckin.propTypes = {\n    roominfo: PropTypes.object,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func,\n    CheckoutSubmitRoom: PropTypes.func\n}","import React from 'react'\nimport {Button, Form, Header, Image, Label, Modal, Input} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport {ListOption} from '../components/ListOption';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\n\n\nMoment.locale('vn');\nmomentLocalizer();\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class RoomDetailCheckout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            CheckinTimeSelected: (this.props.roominfo.fromTime ? new Date(this.props.roominfo.fromTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            roomCurrentClass: (this.props.roominfo.roomCurrentClass ? this.props.roominfo.roomCurrentClass : ''),\n            optionListSelected: (this.props.roominfo.moreOptionId ? JSON.parse(this.props.roominfo.moreOptionId) : ''),\n            roomDetailOpen: false,\n            isSubmiting: false,\n            CheckinDate: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckinTime: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes())))\n        };\n\n        [\n            'checkinRoomSubmit',\n            'getStatusDes',\n            'onChangePickedTime',\n            'handleChangeTypeIDSelect',\n            'handleChangeOption',\n            'handleShowModal',\n            'handleHideModal',\n            'handleChangeInputDate',\n            'handleChangeInputTime'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    async checkinRoomSubmit() {\n        // window.location.reload(true);\n        await this.setState({\n            isSubmiting: true\n        });\n        let action = 'checkin';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let checkinTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            console.log(checkinTime)\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        await this.props.UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId);\n        // await sleep(5000);\n        await this.setState({\n            roomDetailOpen: false,\n            isSubmiting: false\n        });\n    }\n\n    getStatusDes(status = '') {\n        let stt = this.props.statusList;\n        for (var i = 0; i < stt.length; i++) {\n            if (stt[i].key == status) {\n                return stt[i].text;\n            }\n        }\n    }\n\n    onChangePickedTime(val) {\n        this.setState({\n            CheckinTimeSelected: val\n        });\n    }\n\n    handleChangeTypeIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            roomCurrentClass: val['value']\n        });\n    }\n\n    handleChangeOption(data = []) {\n        this.setState({\n            optionListSelected: data\n        });\n    }\n\n    handleShowModal() {\n        this.setState({\n            roomDetailOpen: true\n        });\n    }\n\n    handleHideModal() {\n        this.setState({\n            roomDetailOpen: false\n        });\n    }\n\n    handleChangeInputDate(val, data) {\n        this.setState({\n            CheckinDate: data.value\n        });\n    }\n\n    handleChangeInputTime(val, data) {\n        this.setState({\n            CheckinTime: data.value\n        });\n    }\n\n    render() {\n        const {roominfo, roomTypeOther} = this.props;\n        let imgsrc = roominfo.roomid ? 'images/room' + roominfo.roomid + '.png' : 'images/room101.png';\n        let CheckinDate = this.state.CheckinDate;\n        let CheckinTime = this.state.CheckinTime;\n        // console.log(this.state.CheckinTimeSelected);\n        // console.log(this.props.roominfo);\n\n        // if (isMobile.iOS() && roominfo.fromtime) {}\n\n        return (\n            <Modal style={{width: '100%'}} open={this.state.roomDetailOpen} closeIcon\n                   onClose={() => {\n                       this.setState({roomDetailOpen: false})\n                   }}\n                   trigger={<a className=\"image fit\"><img style={{boxShadow: '10px 10px 5px #ccc'}}\n                                                          onClick={this.handleShowModal}\n                                                          src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>}>\n                <Modal.Header>Room Detail</Modal.Header>\n                <Modal.Content image scrolling style={{height: '450%'}}>\n                    <Image size='medium' src={imgsrc} wrapped/>\n                    <Modal.Description style={{width: '100%'}}>\n                        <Header>{roominfo.roomDescription}</Header>\n                        <b>\n                            Status: {this.getStatusDes(roominfo.status)}\n                        </b>\n                        <hr/>\n                        <label>\n                            <b>Checkin:</b>\n                        </label>\n                        <div>\n                            {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckinTimeSelected}\n                                                               onChange={this.onChangePickedTime}/> :\n                                <div style={{width: '100%'}}><Input style={{width: '50%'}}\n                                                                    onChange={this.handleChangeInputDate}\n                                                                    value={CheckinDate} type=\"date\"\n                                                                    name=\"CheckinDate\"/>\n                                    <Input style={{width: '50%'}} onChange={this.handleChangeInputTime}\n                                           value={CheckinTime} type=\"time\" name=\"CheckinTime\"/>\n                                </div>\n                            }\n                        </div>\n                        <hr/>\n                        <div>\n                            <label>\n                                <b>Room Type:</b>\n                            </label>\n                            <Form.Select\n                                fluid\n                                icon=''\n                                // label='Room Type:'\n                                value={this.state.roomCurrentClass}\n                                options={roomTypeOther}\n                                onChange={this.handleChangeTypeIDSelect}\n                                placeholder='Type'\n                            />\n                        </div>\n                        <hr/>\n                        <Label as='a' color='teal' ribbon>\n                            Thêm Sản Phẩm:\n                        </Label>\n                        <ListOption listoptionIds={this.props.listoptionIds}\n                                    listoption={this.props.listoption}\n                                    onChangeOption={this.handleChangeOption}\n                                    optionListSelected={this.state.optionListSelected ? this.state.optionListSelected : []}/>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary onClick={this.checkinRoomSubmit} disabled={this.state.isSubmiting}>\n                        CheckIn\n                    </Button>\n                    <Button primary onClick={this.handleHideModal} disabled={this.state.isSubmiting}>\n                        Close\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n}\n\n\nRoomDetailCheckout.propTypes = {\n    roominfo: PropTypes.object,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RoomDetailCheckin } from '../components/RoomDetailCheckin';\nimport { RoomDetailCheckout } from '../components/RoomDetailCheckout';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport class ListRoomRows extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          open: false\n        };\n\n        [\n            'renderRow',\n            'refreshPage'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    refreshPage(){\n\n    }\n\n    renderDetail(room = []){\n        if(room.status == 1) {\n            return <RoomDetailCheckin roominfo={room}\n                                      statusList={this.props.statusList}\n                                      roomTypeOther={this.props.roomTypeOther}\n                                      listoptionIds={this.props.listoptionIds}\n                                      listoption={this.props.listoption}\n                                      UpdateCheckInRoom={this.props.UpdateCheckInRoom}\n                                      CheckoutSubmitRoom={this.props.CheckoutRoom}/>;\n        }\n        if(room.status == 0) {\n            return <RoomDetailCheckin roominfo={room}\n                                      statusList={this.props.statusList}\n                                      roomTypeOther={this.props.roomTypeOther}\n                                      listoptionIds={this.props.listoptionIds}\n                                      listoption={this.props.listoption}\n                                      UpdateCheckInRoom={this.props.UpdateCheckInRoom}\n                                      CheckoutSubmitRoom={this.props.CheckoutRoom}/>;\n        }\n        if(room.status == 2) {\n\n        }\n    }\n\n    renderRow() {\n        const {roomsInfo} = this.props;\n        return Array.prototype.map.call(roomsInfo, (room) => (\n            <div className=\"col-3 col-12-mobile\" key={room.roomid}>\n                <article className=\"item\">\n                    <div className=\"image fitfull\">\n                        {this.renderDetail(room)}\n                    </div>\n                    <header>\n                        {room.status == 1 ? <h2 style={{backgroundColor: '#e1eaea'}}>{room.roomid}</h2> : <h2 style={{backgroundColor: '#ffd633'}}>{room.roomid}</h2>}\n                    </header>\n                </article>\n            </div>\n        ));\n    }\n\n    render() {\n        // console.log(this.props.roomInfo);\n        return (\n            <div className=\"row\">\n                {this.renderRow()}\n            </div>\n\n        );\n    }\n}\n\nListRoomRows.defaultProps = {\n    roomsInfo: []\n}\n\nListRoomRows.propTypes = {\n    roomsInfo: PropTypes.array,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func,\n    CheckoutRoom: PropTypes.func\n}\n\n","export function encrypt(string) {\n\n    function RotateLeft(lValue, iShiftBits) {\n        return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\n    }\n\n    function AddUnsigned(lX,lY) {\n        var lX4,lY4,lX8,lY8,lResult;\n        lX8 = (lX & 0x80000000);\n        lY8 = (lY & 0x80000000);\n        lX4 = (lX & 0x40000000);\n        lY4 = (lY & 0x40000000);\n        lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\n        if (lX4 & lY4) {\n            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n        }\n        if (lX4 | lY4) {\n            if (lResult & 0x40000000) {\n                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n            } else {\n                return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n            }\n        } else {\n            return (lResult ^ lX8 ^ lY8);\n        }\n    }\n\n    function F(x,y,z) { return (x & y) | ((~x) & z); }\n    function G(x,y,z) { return (x & z) | (y & (~z)); }\n    function H(x,y,z) { return (x ^ y ^ z); }\n    function I(x,y,z) { return (y ^ (x | (~z))); }\n\n    function FF(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function GG(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function HH(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function II(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function ConvertToWordArray(string) {\n        var lWordCount;\n        var lMessageLength = string.length;\n        var lNumberOfWords_temp1=lMessageLength + 8;\n        var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n        var lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n        var lWordArray=Array(lNumberOfWords-1);\n        var lBytePosition = 0;\n        var lByteCount = 0;\n        while ( lByteCount < lMessageLength ) {\n            lWordCount = (lByteCount-(lByteCount % 4))/4;\n            lBytePosition = (lByteCount % 4)*8;\n            lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));\n            lByteCount++;\n        }\n        lWordCount = (lByteCount-(lByteCount % 4))/4;\n        lBytePosition = (lByteCount % 4)*8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\n        lWordArray[lNumberOfWords-2] = lMessageLength<<3;\n        lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\n        return lWordArray;\n    };\n\n    function WordToHex(lValue) {\n        var WordToHexValue=\"\",WordToHexValue_temp=\"\",lByte,lCount;\n        for (lCount = 0;lCount<=3;lCount++) {\n            lByte = (lValue>>>(lCount*8)) & 255;\n            WordToHexValue_temp = \"0\" + lByte.toString(16);\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);\n        }\n        return WordToHexValue;\n    };\n\n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    };\n\n    var x=Array();\n    var k,AA,BB,CC,DD,a,b,c,d;\n    var S11=7, S12=12, S13=17, S14=22;\n    var S21=5, S22=9 , S23=14, S24=20;\n    var S31=4, S32=11, S33=16, S34=23;\n    var S41=6, S42=10, S43=15, S44=21;\n\n    string = Utf8Encode(string);\n\n    x = ConvertToWordArray(string);\n\n    a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n\n    for (k=0;k<x.length;k+=16) {\n        AA=a; BB=b; CC=c; DD=d;\n        a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\n        d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n        c=FF(c,d,a,b,x[k+2], S13,0x242070DB);\n        b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n        a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n        d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n        c=FF(c,d,a,b,x[k+6], S13,0xA8304613);\n        b=FF(b,c,d,a,x[k+7], S14,0xFD469501);\n        a=FF(a,b,c,d,x[k+8], S11,0x698098D8);\n        d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n        c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n        b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n        a=FF(a,b,c,d,x[k+12],S11,0x6B901122);\n        d=FF(d,a,b,c,x[k+13],S12,0xFD987193);\n        c=FF(c,d,a,b,x[k+14],S13,0xA679438E);\n        b=FF(b,c,d,a,x[k+15],S14,0x49B40821);\n        a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n        d=GG(d,a,b,c,x[k+6], S22,0xC040B340);\n        c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n        b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\n        a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n        d=GG(d,a,b,c,x[k+10],S22,0x2441453);\n        c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n        b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n        a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n        d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n        c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n        b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n        a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n        d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n        c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n        b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n        a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n        d=HH(d,a,b,c,x[k+8], S32,0x8771F681);\n        c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n        b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n        a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n        d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n        c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n        b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n        a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n        d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\n        c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n        b=HH(b,c,d,a,x[k+6], S34,0x4881D05);\n        a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n        d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n        c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n        b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n        a=II(a,b,c,d,x[k+0], S41,0xF4292244);\n        d=II(d,a,b,c,x[k+7], S42,0x432AFF97);\n        c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n        b=II(b,c,d,a,x[k+5], S44,0xFC93A039);\n        a=II(a,b,c,d,x[k+12],S41,0x655B59C3);\n        d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n        c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n        b=II(b,c,d,a,x[k+1], S44,0x85845DD1);\n        a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n        d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n        c=II(c,d,a,b,x[k+6], S43,0xA3014314);\n        b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n        a=II(a,b,c,d,x[k+4], S41,0xF7537E82);\n        d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n        c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n        b=II(b,c,d,a,x[k+9], S44,0xEB86D391);\n        a=AddUnsigned(a,AA);\n        b=AddUnsigned(b,BB);\n        c=AddUnsigned(c,CC);\n        d=AddUnsigned(d,DD);\n    }\n\n    var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);\n\n    return temp.toLowerCase();\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {Form, Input, Image, Loader, Segment, Dimmer, Label} from 'semantic-ui-react';\nimport {ListRoomRows} from '../components/ListRoomRows';\n// import {SearchingTab} from '../components/SearchingTab';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\nimport {encrypt} from '../components/sha256';\n\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class IndexPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadedRooms: false,\n            isLoadedParam: false,\n            roomDetailOpen: false,\n            rooms: [],\n            roomIds: [],\n            status: [],\n            statusIds: [],\n            roomTypeOther: [],\n            roomTypeOtherIds: [],\n            listoption: [],\n            listoptionIds: [],\n            roomidselected: '',\n            statusSelected: ''\n        };\n\n        [\n            'getListRoomDetails',\n            'UpdateCheckInRoom',\n            'handleChangeRoomIDSelect',\n            'handleChangeStatusIDSelect',\n            'getListStatus',\n            'renderSearchForm',\n            'renderListRooms',\n            'getroomTypeOther',\n            'getlistoption',\n            'handleClearSearching',\n            'CheckoutRoom',\n            'getIPAddress',\n            'sha256'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    async getListRoomDetails(filter) {\n        console.log(\"getListRoomDetails\");\n        this.setState({\n            isLoadedRooms: false,\n        });\n        await fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listRoomsDetail\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    console.log(result);\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        console.log(tmp)\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomid'];\n                        tmp2['text'] = tmp['roomDescription'];\n                        tmp2['value'] = tmp['roomid'];\n                        ids.push(tmp2);\n                    }\n                    // debugger;\n                    if (filter) {\n                        let newstr = strs.filter(function (item) {\n                            return item[filter.id] == filter.value;\n                        });\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: newstr,\n                            roomIds: ids\n                        });\n                    } else {\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: strs,\n                            roomIds: ids\n                        });\n                    }\n                }, (error) => {\n                    this.setState({\n                        isLoadedRooms: false,\n                    });\n                }\n            )\n    }\n\n    getListStatus() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listStatus\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['statusId'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['statusId'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        status: strs,\n                        statusIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getlistoption() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listoption\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        ids.push(tmp['optionId']);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        listoption: strs,\n                        listoptionIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getroomTypeOther() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=PricebyOther\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomType'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['roomType'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        roomTypeOther: strs,\n                        roomTypeOtherIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    async UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText) {\n        console.log(noteText);\n        let formatted_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n        } else {\n            let current_datetime = checkinTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n        }\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&options=\" + options +\n            \"&noteText=\" + noteText +\n            \"&totalOptionPrice=\" + totalOptionPrice;\n\n        await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkin&id=' + id, {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            let isSuccess = false;\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : isSuccess = true;\n            });\n\n            let stt = response.status;\n            if (stt == 200) {\n                if (!msgerr) {\n                    toast.success(\"Đặt phòng \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(\"Error:\" + JSON.stringify(msgerr));\n                }\n            } else {\n                toast.error(\"Something is wrong, please check log for detail!\");\n            }\n\n        }).then(() => {\n            this.handleClearSearching();\n        })\n    }\n\n    async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText) {\n        console.log(\"CheckoutRoom index page\");\n        console.log(id);\n        console.log(checkinTime);\n        console.log(roomClass);\n        console.log(options);\n        console.log(totalOptionPrice);\n        console.log(roomId);\n        console.log(action);\n        console.log(checkoutTime);\n        console.log(noteText);\n\n        let formatted_date = '';\n        let formattedcheckout_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n            formattedcheckout_date = checkoutTime;\n        } else {\n            let current_datetime = checkinTime;\n            let current_Checkoutdatetime = checkoutTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n            formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n        }\n\n        // console.log(formatted_date);\n        // console.log(formattedcheckout_date);\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&roomId=\" + roomId +\n            \"&options=\" + options +\n            \"&totalOptionPrice=\" + totalOptionPrice +\n            \"&totalRoomPrice=\" + totalRoomPrice +\n            \"&totalPrice=\" + totalPrice +\n            \"&noteText=\" + noteText +\n            \"&checkoutTime=\" + formattedcheckout_date;\n\n        if (action == \"checkout\") {\n            await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkout&id=' + id, {\n                method: 'POST',\n                body: encoded,\n                headers: {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then(async function (response) {\n                let msgerr = '';\n                let result = [];\n                await response.json().then(function (data) {\n                    data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : result = data['data'];\n                });\n\n                let stt = response.status;\n                if (stt == 200) {\n                    if (!msgerr) {\n                        toast.success(\"Thanh toán \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                    } else {\n                        toast.error(\"Error:\" + JSON.stringify(msgerr));\n                    }\n                } else {\n                    toast.error(\"Something is wrong, please check log for detail!\");\n                }\n\n            }).then(() => {\n                this.handleClearSearching();\n            })\n        }\n    }\n\n    handleClearSearching() {\n        this.setState({\n            roomidselected: '',\n            statusSelected: '',\n        });\n        this.getListRoomDetails();\n    }\n\n    handleChangeRoomIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            roomidselected: val['value'],\n            statusSelected: ''\n        }, () => {\n            let filter = {'id': 'roomid', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    handleChangeStatusIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            statusSelected: val['value'],\n            roomidselected: ''\n        }, () => {\n            let filter = {'id': 'status', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    renderSearchForm() {\n        if (this.state.isLoadedParam == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Loading</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        let listRoomIds = this.state.roomIds;\n        let listStatusIds = this.state.statusIds;\n        let styleDisable = {'pointerEvents': ''};\n        // debugger;\n        if (!this.state.isLoadedRooms || !this.state.isLoadedParam) {\n            styleDisable = {'pointerEvents': 'none'};\n        }\n        var newlistRoomIds = '';\n        if (listRoomIds.length > 0) {\n            listRoomIds.map((item) => {\n                let tmp = {\n                    title: item.key,\n                    description: item.text\n                }\n                item['title'] = item.key;\n                item['description'] = item.text;\n            });\n        }\n        return (\n            <Segment padded style={styleDisable}>\n                {/*{listRoomIds.length > 0 && <SearchingTab listRoomId={listRoomIds}/>}*/}\n                {/*<Input fluid icon='search plus' action='Search' placeholder='Search...'/>*/}\n                <Label attached='top left' onClick={this.handleClearSearching}>Refresh</Label>\n                <br/>\n                <Form.Group widths='equal'>\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo Phòng'\n                        value={this.state.roomidselected}\n                        onChange={this.handleChangeRoomIDSelect}\n                        options={listRoomIds}\n                        placeholder='RoomIDs'\n                    />\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo trạng thái'\n                        value={this.state.statusSelected}\n                        options={listStatusIds}\n                        onChange={this.handleChangeStatusIDSelect}\n                        placeholder='Status'\n                    />\n                </Form.Group>\n            </Segment>\n        );\n    }\n\n    renderListRooms() {\n        const {rooms, statusIds, roomTypeOtherIds, listoptionIds, listoption} = {...this.state};\n\n        if (this.state.isLoadedRooms == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Loading</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        return (\n            <Segment padded>\n                <Label attached='top'>Room List</Label>\n                <ListRoomRows roomsInfo={rooms}\n                              statusList={statusIds}\n                              roomTypeOther={roomTypeOtherIds}\n                              listoptionIds={listoptionIds}\n                              listoption={listoption}\n                              UpdateCheckInRoom={this.UpdateCheckInRoom}\n                              CheckoutRoom={this.CheckoutRoom}\n                />\n            </Segment>\n        );\n    }\n\n    async sha256(message) {\n        console.log(encrypt(\"bangth\"));\n    }\n\n\n    getIPAddress() {\n        // var https = require('https');\n        // var callback = function(err, ip){\n        //     if(err){\n        //         return console.log(err);\n        //     }\n        //     console.log('Our public IP is', ip);\n        //     // do something here with the IP address\n        // };\n        // https.get({\n        //     host: 'api.ipify.org',\n        // }, function(response) {\n        //     var ip = '';\n        //     response.on('data', function(d) {\n        //         ip += d;\n        //     });\n        //     response.on('end', function() {\n        //         if(ip){\n        //             callback(null, ip);\n        //         } else {\n        //             callback('could not get public ip address :(');\n        //         }\n        //     });\n        // });\n        // sessionStorage.setItem('key', 'value');\n\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    this.setState({\n                        ipadd: result[\"ip\"],\n                    })\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    componentDidMount() {\n        console.log(this.props.userInfo);\n        this.getIPAddress();\n        this.getListRoomDetails();\n        this.getListStatus();\n        this.getroomTypeOther();\n        this.getlistoption();\n    }\n\n    render() {\n        // console.log(this.state.statusIds);\n        // console.log(this.state.statusSelected);\n        return (\n            <div>\n                {/*<ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>*/}\n                <Form>\n                    {this.renderSearchForm()}\n                    {this.renderListRooms()}\n                </Form>\n                <br/><br/>\n            </div>\n        );\n    }\n}\n\nIndexPage.propTypes = {\n    userInfo: PropTypes.object\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {ListRoomRows} from \"../components/ListRoomRows\";\nimport {\n    Button,\n    Form,\n    Header,\n    Image,\n    Input,\n    Label,\n    Modal,\n    Segment,\n    Statistic,\n    TextArea,\n    Confirm, Loader, Dimmer\n} from 'semantic-ui-react';\nimport {encrypt} from '../components/sha256';\nimport {toast} from 'react-toastify';\n\nexport class LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errUserMsg: {\n                content: \"\",\n            },\n            errPassMsg: {\n                content: \"\",\n            },\n            errpinCode: {\n                content: \"\",\n            },\n            userInfo: {\n                token: '',\n                email: '',\n                ipAddress: ''\n            },\n            userName: '',\n            passWord: '',\n            pinCode: '',\n            isVerified: false,\n            isChecking: false\n        };\n        [\n            'submitLogin',\n            'handleChangeUser',\n            'handleChangePass',\n            'verifyEmail',\n            'handleChangePinCode'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    handleChangePinCode(event, data) {\n        this.setState({\n            pinCode: data.value\n        });\n    }\n\n    handleChangeUser(event, data) {\n        this.setState({\n            userName: data.value\n        });\n    }\n\n    handleChangePass(event, data) {\n        this.setState({\n            passWord: data.value\n        });\n    }\n\n    componentDidMount() {\n        console.log(this.props.ipAddress);\n    }\n\n    verifyEmail() {\n        this.setState({\n            isChecking: true\n        });\n        let username = this.state.userName;\n\n        let encoded = \"email=\" + username +\n            \"&ipAddress=\" + this.props.ipAddress;\n\n        console.log(encoded);\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=verifyemail', {\n            method: 'POST',\n            body: encoded,\n            headers: {\"Content-type\": \"application/x-www-form-urlencoded\"}\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n                if (!msgerr) {\n                    toast.success(\"Please check your email to get PIN code!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(msgerr);\n                }\n            });\n        }).then(() => {\n            this.setState({\n                isChecking: false\n            });\n            if (isValid) {\n                this.setState({\n                    isVerified: true\n                });\n            }\n        })\n    }\n\n    submitLogin() {\n        this.setState({\n            isChecking: true\n        });\n        console.log(this.state.passWord)\n        let passWordHash = encrypt(this.state.passWord);\n        let username = this.state.userName;\n        let pincode = this.state.pinCode;\n\n        let encoded = \"email=\" + username +\n            \"&pass=\" + passWordHash +\n            \"&pincode=\" + pincode +\n            \"&ipAddress=\" + this.props.ipAddress;\n\n        console.log(encoded);\n        let isValid = false;\n        let token = \"\";\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=login', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            // debugger;\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n                if (!msgerr) {\n                    token = data['token'];\n                    sessionStorage.setItem('tokenTBh', data['token']);\n                    sessionStorage.setItem('emailTBh', username);\n                    toast.success(\"Login Successfully!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(msgerr);\n                }\n            });\n        }).then(() => {\n            this.setState({\n                isChecking: false\n            });\n            if (isValid) {\n                this.props.setTokenValid(username, token);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Segment>\n                <Form>\n                    <Form.Input\n                        error={this.state.errUserMsg.content != \"\" ? this.state.errUserMsg : null}\n                        fluid\n                        onChange={this.handleChangeUser}\n                        value={this.state.userName}\n                        label='User_Name:'\n                        name=\"username\"\n                        placeholder='Your Email'\n                    />\n                    {this.state.isVerified && <Form.Input\n                        style={{display: this.state.isVerified ? '' : 'none'}}\n                        error={this.state.errPassMsg.length > 0 ? this.state.errPassMsg : null}\n                        fluid\n                        onChange={this.handleChangePass}\n                        value={this.state.passWord}\n                        type=\"password\"\n                        label='Password:'\n                        placeholder='Put Your Password here...'\n                    />}\n\n                    {this.state.isVerified && <Form.Input\n                        error={this.state.errpinCode.length > 0 ? this.state.errpinCode : null}\n                        fluid\n                        onChange={this.handleChangePinCode}\n                        value={this.state.pinCode}\n                        type=\"number\"\n                        label='Pin Code:'\n                        placeholder='Put your Pin code here...'\n                    />}\n                    {this.state.isVerified ?\n                        <Button fluid size=\"large\" onClick={this.submitLogin} disabled={this.state.isChecking} primary\n                                type='submit'>\n                            Submit\n                        </Button>\n                        :\n                        <Button fluid size=\"large\" onClick={this.verifyEmail} disabled={this.state.isChecking} primary\n                                type='submit'>\n                            Verify\n                        </Button>\n                    }\n                </Form>\n            </Segment>\n        )\n    }\n}\n\nLoginPage.propTypes = {\n    ipAddress: PropTypes.string,\n    setTokenValid: PropTypes.func\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {IndexPage} from './containers/IndexPage';\nimport {LoginPage} from './containers/LoginPage';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n    Dimmer, Image,\n    Loader, Segment\n} from 'semantic-ui-react';\nimport {ToastContainer} from \"react-toastify\";\n\nclass ThaiBinhHotel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTokenValid: false,\n            userInfo: {\n                token: sessionStorage.getItem('tokenTBh'),\n                email: sessionStorage.getItem('emailTBh'),\n                ipAddress: \"\"\n            },\n            isChecking: true,\n        };\n        [\n            'checkTokenValid',\n            'getIPAndCheckToken',\n            'setTokenValid'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    setTokenValid(username, token) {\n        // debugger;\n        let userInfo = {...this.state.userInfo};\n        userInfo.email = username;\n        userInfo.token = token\n        this.setState({\n            isTokenValid: true,\n            userInfo: userInfo\n        });\n    }\n\n    getIPAndCheckToken() {\n        this.setState({\n            isChecking: true,\n        });\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result[\"ip\"]);\n\n                    let userInfo = {...this.state.userInfo};\n                    userInfo['ipAddress'] = result[\"ip\"]\n                    this.setState({\n                        userInfo: userInfo\n                    });\n\n                    if (!this.state.userInfo.token) {\n                        this.setState({\n                            isChecking: false\n                        });\n                        return;\n                    }\n\n                    this.checkTokenValid(result[\"ip\"])\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    async checkTokenValid(ipAddress) {\n        // let token = sessionStorage.getItem('tokenTBh');\n        // let email = sessionStorage.getItem('emailTBh');\n        // let ipAddress = this.getIPAddress();\n        let encoded = \"token=\" + this.state.userInfo.token +\n            \"&email=\" + this.state.userInfo.email +\n            \"&ipAddress=\" + ipAddress;\n\n        console.log(encoded);\n\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkToken', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n            });\n        }).then(() => {\n            if (isValid) {\n                this.setState({\n                    isTokenValid: true,\n                    isChecking: false\n                });\n            } else {\n                this.setState({\n                    isTokenValid: false,\n                    isChecking: false\n                });\n            }\n        })\n    }\n\n    componentDidMount() {\n        // sessionStorage.setItem('tokenTBh', 'fb28ea0172706c801ce7d4e1d4edcb5f');\n        // sessionStorage.setItem('emailTBh', 'bang.th@mobivi.vn');\n        if (!this.state.userInfo.token) {\n            this.setState({\n                isTokenValid: false,\n                isChecking: false\n            });\n        }\n        this.getIPAndCheckToken();\n    }\n\n    render() {\n        let isTokenValid = this.state.isTokenValid;\n        if (this.state.isChecking) {\n            // return <Loader size=\"massive\" active inline='centered'>System is checking your permission...</Loader>\n            return <Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>System is checking your permission...</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>\n        }\n        return (\n            <div>\n                <ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>\n                {isTokenValid ?\n                    <IndexPage userInfo={this.state.userInfo}/>\n                    :\n                    <LoginPage ipAddress={this.state.userInfo.ipAddress} setTokenValid={this.setTokenValid}/>}\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<ThaiBinhHotel/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}