{"ast":null,"code":"import _defineProperty from \"/Users/bangth/Desktop/TBHotel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/bangth/Desktop/TBHotel/src/containers/IndexPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Image, Loader, Segment, Dimmer, Label } from 'semantic-ui-react';\nimport { ListRoomRows } from '../components/ListRoomRows'; // import {SearchingTab} from '../components/SearchingTab';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\nimport { encrypt } from '../components/sha256';\nconst isMobile = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return navigator.userAgent.match(/IEMobile/i);\n  },\n  any: function () {\n    return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows();\n  }\n};\nexport class IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoadedRooms: false,\n      isLoadedParam: false,\n      roomDetailOpen: false,\n      rooms: [],\n      roomIds: [],\n      status: [],\n      statusIds: [],\n      roomTypeOther: [],\n      roomTypeOtherIds: [],\n      listoption: [],\n      listoptionIds: [],\n      roomidselected: '',\n      statusSelected: ''\n    };\n    ['getListRoomDetails', 'UpdateCheckInRoom', 'handleChangeRoomIDSelect', 'handleChangeStatusIDSelect', 'getListStatus', 'renderSearchForm', 'renderListRooms', 'getroomTypeOther', 'getlistoption', 'handleClearSearching', 'CheckoutRoom', 'getIPAddress', 'sha256'].forEach(method => this[method] = this[method].bind(this));\n  }\n\n  async getListRoomDetails(filter) {\n    console.log(\"getListRoomDetails\");\n    this.setState({\n      isLoadedRooms: false\n    });\n    await fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listRoomsDetail\").then(res => res.json()).then(result => {\n      let strs = [];\n      let ids = [];\n      let tmp = [];\n      let tmp2 = {};\n      console.log(result);\n\n      for (let i = 0; i < result.length; i++) {\n        tmp = JSON.parse(result[i]);\n        console.log(tmp);\n        strs.push(tmp);\n        tmp2 = {};\n        tmp2['key'] = tmp['roomid'];\n        tmp2['text'] = tmp['roomDescription'];\n        tmp2['value'] = tmp['roomid'];\n        ids.push(tmp2);\n      } // debugger;\n\n\n      if (filter) {\n        let newstr = strs.filter(function (item) {\n          return item[filter.id] == filter.value;\n        });\n        this.setState({\n          isLoadedRooms: true,\n          rooms: newstr,\n          roomIds: ids\n        });\n      } else {\n        this.setState({\n          isLoadedRooms: true,\n          rooms: strs,\n          roomIds: ids\n        });\n      }\n    }, error => {\n      this.setState({\n        isLoadedRooms: false\n      });\n    });\n  }\n\n  getListStatus() {\n    fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listStatus\").then(res => res.json()).then(result => {\n      let strs = [];\n      let ids = [];\n      let tmp = [];\n      let tmp2 = {};\n\n      for (let i = 0; i < result.length; i++) {\n        tmp = JSON.parse(result[i]);\n        strs.push(tmp);\n        tmp2 = {};\n        tmp2['key'] = tmp['statusId'];\n        tmp2['text'] = tmp['description'];\n        tmp2['value'] = tmp['statusId'];\n        ids.push(tmp2);\n      }\n\n      this.setState({\n        isLoadedParam: true,\n        status: strs,\n        statusIds: ids\n      });\n    }, error => {\n      this.setState({\n        isLoadedParam: false\n      });\n    });\n  }\n\n  getlistoption() {\n    fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listoption\").then(res => res.json()).then(result => {\n      let strs = [];\n      let ids = [];\n      let tmp = [];\n\n      for (let i = 0; i < result.length; i++) {\n        tmp = JSON.parse(result[i]);\n        strs.push(tmp);\n        ids.push(tmp['optionId']);\n      }\n\n      this.setState({\n        isLoadedParam: true,\n        listoption: strs,\n        listoptionIds: ids\n      });\n    }, error => {\n      this.setState({\n        isLoadedParam: false\n      });\n    });\n  }\n\n  getroomTypeOther() {\n    fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=PricebyOther\").then(res => res.json()).then(result => {\n      let strs = [];\n      let ids = [];\n      let tmp = [];\n      let tmp2 = {};\n\n      for (let i = 0; i < result.length; i++) {\n        tmp = JSON.parse(result[i]);\n        strs.push(tmp);\n        tmp2 = {};\n        tmp2['key'] = tmp['roomType'];\n        tmp2['text'] = tmp['description'];\n        tmp2['value'] = tmp['roomType'];\n        ids.push(tmp2);\n      }\n\n      this.setState({\n        isLoadedParam: true,\n        roomTypeOther: strs,\n        roomTypeOtherIds: ids\n      });\n    }, error => {\n      this.setState({\n        isLoadedParam: false\n      });\n    });\n  }\n\n  async UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText) {\n    console.log(noteText);\n    let formatted_date = '';\n\n    if (isMobile.iOS()) {\n      formatted_date = checkinTime;\n    } else {\n      let current_datetime = checkinTime;\n      formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n    }\n\n    let encoded = \"checkinTime=\" + formatted_date + \"&roomClass=\" + roomClass + \"&options=\" + options + \"&noteText=\" + noteText + \"&totalOptionPrice=\" + totalOptionPrice;\n    await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkin&id=' + id, {\n      method: 'POST',\n      body: encoded,\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(async function (response) {\n      let msgerr = '';\n      let isSuccess = false;\n      await response.json().then(function (data) {\n        console.log(data);\n        data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : isSuccess = true;\n      });\n      let stt = response.status;\n\n      if (stt == 200) {\n        if (!msgerr) {\n          toast.success(\"Đặt phòng \" + roomId + \" thành công!\", {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          toast.error(\"Error:\" + JSON.stringify(msgerr));\n        }\n      } else {\n        toast.error(\"Something is wrong, please check log for detail!\");\n      }\n    }).then(() => {\n      this.handleClearSearching();\n    });\n  }\n\n  async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText) {\n    console.log(\"CheckoutRoom index page\");\n    console.log(id);\n    console.log(checkinTime);\n    console.log(roomClass);\n    console.log(options);\n    console.log(totalOptionPrice);\n    console.log(roomId);\n    console.log(action);\n    console.log(checkoutTime);\n    console.log(noteText);\n    let formatted_date = '';\n    let formattedcheckout_date = '';\n\n    if (isMobile.iOS()) {\n      formatted_date = checkinTime;\n      formattedcheckout_date = checkoutTime;\n    } else {\n      let current_datetime = checkinTime;\n      let current_Checkoutdatetime = checkoutTime;\n      formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n      formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n    } // console.log(formatted_date);\n    // console.log(formattedcheckout_date);\n\n\n    let encoded = \"checkinTime=\" + formatted_date + \"&roomClass=\" + roomClass + \"&roomId=\" + roomId + \"&options=\" + options + \"&totalOptionPrice=\" + totalOptionPrice + \"&totalRoomPrice=\" + totalRoomPrice + \"&totalPrice=\" + totalPrice + \"&noteText=\" + noteText + \"&checkoutTime=\" + formattedcheckout_date;\n\n    if (action == \"checkout\") {\n      await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkout&id=' + id, {\n        method: 'POST',\n        body: encoded,\n        headers: {\n          \"Content-type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(async function (response) {\n        let msgerr = '';\n        let result = [];\n        await response.json().then(function (data) {\n          data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : result = data['data'];\n        });\n        let stt = response.status;\n\n        if (stt == 200) {\n          if (!msgerr) {\n            toast.success(\"Thanh toán \" + roomId + \" thành công!\", {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          } else {\n            toast.error(\"Error:\" + JSON.stringify(msgerr));\n          }\n        } else {\n          toast.error(\"Something is wrong, please check log for detail!\");\n        }\n      }).then(() => {\n        this.handleClearSearching();\n      });\n    }\n  }\n\n  handleClearSearching() {\n    this.setState({\n      roomidselected: '',\n      statusSelected: ''\n    });\n    this.getListRoomDetails();\n  }\n\n  handleChangeRoomIDSelect(event, val = null) {\n    if (val == null) return;\n    this.setState({\n      roomidselected: val['value'],\n      statusSelected: ''\n    }, () => {\n      let filter = {\n        'id': 'roomid',\n        'value': val['value']\n      };\n      this.getListRoomDetails(filter);\n    });\n  }\n\n  handleChangeStatusIDSelect(event, val = null) {\n    if (val == null) return;\n    this.setState({\n      statusSelected: val['value'],\n      roomidselected: ''\n    }, () => {\n      let filter = {\n        'id': 'status',\n        'value': val['value']\n      };\n      this.getListRoomDetails(filter);\n    });\n  }\n\n  renderSearchForm() {\n    if (this.state.isLoadedParam == false) {\n      return React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Dimmer, {\n        active: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"Loading\")), React.createElement(Image, {\n        src: \"images/loader.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }));\n    }\n\n    let listRoomIds = this.state.roomIds;\n    let listStatusIds = this.state.statusIds;\n    let styleDisable = {\n      'pointerEvents': ''\n    }; // debugger;\n\n    if (!this.state.isLoadedRooms || !this.state.isLoadedParam) {\n      styleDisable = {\n        'pointerEvents': 'none'\n      };\n    }\n\n    var newlistRoomIds = '';\n\n    if (listRoomIds.length > 0) {\n      listRoomIds.map(item => {\n        let tmp = {\n          title: item.key,\n          description: item.text\n        };\n        item['title'] = item.key;\n        item['description'] = item.text;\n      });\n    }\n\n    return React.createElement(Segment, {\n      padded: true,\n      style: styleDisable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Label, {\n      attached: \"top left\",\n      onClick: this.handleClearSearching,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Refresh\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(Form.Select, {\n      fluid: true,\n      icon: \"\",\n      label: \"L\\u1ECDc theo Ph\\xF2ng\",\n      value: this.state.roomidselected,\n      onChange: this.handleChangeRoomIDSelect,\n      options: listRoomIds,\n      placeholder: \"RoomIDs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(Form.Select, {\n      fluid: true,\n      icon: \"\",\n      label: \"L\\u1ECDc theo tr\\u1EA1ng th\\xE1i\",\n      value: this.state.statusSelected,\n      options: listStatusIds,\n      onChange: this.handleChangeStatusIDSelect,\n      placeholder: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    })));\n  }\n\n  renderListRooms() {\n    const _this$state = _objectSpread({}, this.state),\n          rooms = _this$state.rooms,\n          statusIds = _this$state.statusIds,\n          roomTypeOtherIds = _this$state.roomTypeOtherIds,\n          listoptionIds = _this$state.listoptionIds,\n          listoption = _this$state.listoption;\n\n    if (this.state.isLoadedRooms == false) {\n      return React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(Dimmer, {\n        active: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \"Loading\")), React.createElement(Image, {\n        src: \"images/loader.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Segment, {\n      padded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Label, {\n      attached: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Room List\"), React.createElement(ListRoomRows, {\n      roomsInfo: rooms,\n      statusList: statusIds,\n      roomTypeOther: roomTypeOtherIds,\n      listoptionIds: listoptionIds,\n      listoption: listoption,\n      UpdateCheckInRoom: this.UpdateCheckInRoom,\n      CheckoutRoom: this.CheckoutRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }));\n  }\n\n  async sha256(message) {\n    console.log(encrypt(\"bangth\"));\n  }\n\n  getIPAddress() {\n    // var https = require('https');\n    // var callback = function(err, ip){\n    //     if(err){\n    //         return console.log(err);\n    //     }\n    //     console.log('Our public IP is', ip);\n    //     // do something here with the IP address\n    // };\n    // https.get({\n    //     host: 'api.ipify.org',\n    // }, function(response) {\n    //     var ip = '';\n    //     response.on('data', function(d) {\n    //         ip += d;\n    //     });\n    //     response.on('end', function() {\n    //         if(ip){\n    //             callback(null, ip);\n    //         } else {\n    //             callback('could not get public ip address :(');\n    //         }\n    //     });\n    // });\n    // sessionStorage.setItem('key', 'value');\n    fetch(\"https://api.ipify.org/?format=json\", {\n      method: \"GET\",\n      // body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        ipadd: result[\"ip\"]\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.props.userInfo);\n    this.getIPAddress();\n    this.getListRoomDetails();\n    this.getListStatus();\n    this.getroomTypeOther();\n    this.getlistoption();\n  }\n\n  render() {\n    // console.log(this.state.statusIds);\n    // console.log(this.state.statusSelected);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, this.renderSearchForm(), this.renderListRooms()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }));\n  }\n\n}\nIndexPage.propTypes = {\n  userInfo: PropTypes.object\n};","map":{"version":3,"sources":["/Users/bangth/Desktop/TBHotel/src/containers/IndexPage.js"],"names":["React","ReactDOM","PropTypes","Form","Input","Image","Loader","Segment","Dimmer","Label","ListRoomRows","toast","encrypt","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","IndexPage","Component","constructor","props","state","isLoadedRooms","isLoadedParam","roomDetailOpen","rooms","roomIds","status","statusIds","roomTypeOther","roomTypeOtherIds","listoption","listoptionIds","roomidselected","statusSelected","forEach","method","bind","getListRoomDetails","filter","console","log","setState","fetch","then","res","json","result","strs","ids","tmp","tmp2","i","length","JSON","parse","push","newstr","item","id","value","error","getListStatus","getlistoption","getroomTypeOther","UpdateCheckInRoom","checkinTime","roomClass","options","totalOptionPrice","roomId","noteText","formatted_date","current_datetime","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","encoded","body","headers","response","msgerr","isSuccess","data","stringify","stt","success","position","POSITION","TOP_RIGHT","handleClearSearching","CheckoutRoom","action","checkoutTime","totalRoomPrice","totalPrice","formattedcheckout_date","current_Checkoutdatetime","handleChangeRoomIDSelect","event","val","handleChangeStatusIDSelect","renderSearchForm","listRoomIds","listStatusIds","styleDisable","newlistRoomIds","map","title","key","description","text","renderListRooms","sha256","message","getIPAddress","ipadd","componentDidMount","userInfo","render","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {Form, Input, Image, Loader, Segment, Dimmer, Label} from 'semantic-ui-react';\nimport {ListRoomRows} from '../components/ListRoomRows';\n// import {SearchingTab} from '../components/SearchingTab';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\nimport {encrypt} from '../components/sha256';\n\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class IndexPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadedRooms: false,\n            isLoadedParam: false,\n            roomDetailOpen: false,\n            rooms: [],\n            roomIds: [],\n            status: [],\n            statusIds: [],\n            roomTypeOther: [],\n            roomTypeOtherIds: [],\n            listoption: [],\n            listoptionIds: [],\n            roomidselected: '',\n            statusSelected: ''\n        };\n\n        [\n            'getListRoomDetails',\n            'UpdateCheckInRoom',\n            'handleChangeRoomIDSelect',\n            'handleChangeStatusIDSelect',\n            'getListStatus',\n            'renderSearchForm',\n            'renderListRooms',\n            'getroomTypeOther',\n            'getlistoption',\n            'handleClearSearching',\n            'CheckoutRoom',\n            'getIPAddress',\n            'sha256'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    async getListRoomDetails(filter) {\n        console.log(\"getListRoomDetails\");\n        this.setState({\n            isLoadedRooms: false,\n        });\n        await fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listRoomsDetail\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    console.log(result);\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        console.log(tmp)\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomid'];\n                        tmp2['text'] = tmp['roomDescription'];\n                        tmp2['value'] = tmp['roomid'];\n                        ids.push(tmp2);\n                    }\n                    // debugger;\n                    if (filter) {\n                        let newstr = strs.filter(function (item) {\n                            return item[filter.id] == filter.value;\n                        });\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: newstr,\n                            roomIds: ids\n                        });\n                    } else {\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: strs,\n                            roomIds: ids\n                        });\n                    }\n                }, (error) => {\n                    this.setState({\n                        isLoadedRooms: false,\n                    });\n                }\n            )\n    }\n\n    getListStatus() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listStatus\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['statusId'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['statusId'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        status: strs,\n                        statusIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getlistoption() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listoption\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        ids.push(tmp['optionId']);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        listoption: strs,\n                        listoptionIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getroomTypeOther() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=PricebyOther\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomType'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['roomType'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        roomTypeOther: strs,\n                        roomTypeOtherIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    async UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText) {\n        console.log(noteText);\n        let formatted_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n        } else {\n            let current_datetime = checkinTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n        }\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&options=\" + options +\n            \"&noteText=\" + noteText +\n            \"&totalOptionPrice=\" + totalOptionPrice;\n\n        await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkin&id=' + id, {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            let isSuccess = false;\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : isSuccess = true;\n            });\n\n            let stt = response.status;\n            if (stt == 200) {\n                if (!msgerr) {\n                    toast.success(\"Đặt phòng \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(\"Error:\" + JSON.stringify(msgerr));\n                }\n            } else {\n                toast.error(\"Something is wrong, please check log for detail!\");\n            }\n\n        }).then(() => {\n            this.handleClearSearching();\n        })\n    }\n\n    async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText) {\n        console.log(\"CheckoutRoom index page\");\n        console.log(id);\n        console.log(checkinTime);\n        console.log(roomClass);\n        console.log(options);\n        console.log(totalOptionPrice);\n        console.log(roomId);\n        console.log(action);\n        console.log(checkoutTime);\n        console.log(noteText);\n\n        let formatted_date = '';\n        let formattedcheckout_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n            formattedcheckout_date = checkoutTime;\n        } else {\n            let current_datetime = checkinTime;\n            let current_Checkoutdatetime = checkoutTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n            formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n        }\n\n        // console.log(formatted_date);\n        // console.log(formattedcheckout_date);\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&roomId=\" + roomId +\n            \"&options=\" + options +\n            \"&totalOptionPrice=\" + totalOptionPrice +\n            \"&totalRoomPrice=\" + totalRoomPrice +\n            \"&totalPrice=\" + totalPrice +\n            \"&noteText=\" + noteText +\n            \"&checkoutTime=\" + formattedcheckout_date;\n\n        if (action == \"checkout\") {\n            await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkout&id=' + id, {\n                method: 'POST',\n                body: encoded,\n                headers: {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then(async function (response) {\n                let msgerr = '';\n                let result = [];\n                await response.json().then(function (data) {\n                    data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"][\"message\"]) : result = data['data'];\n                });\n\n                let stt = response.status;\n                if (stt == 200) {\n                    if (!msgerr) {\n                        toast.success(\"Thanh toán \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                    } else {\n                        toast.error(\"Error:\" + JSON.stringify(msgerr));\n                    }\n                } else {\n                    toast.error(\"Something is wrong, please check log for detail!\");\n                }\n\n            }).then(() => {\n                this.handleClearSearching();\n            })\n        }\n    }\n\n    handleClearSearching() {\n        this.setState({\n            roomidselected: '',\n            statusSelected: '',\n        });\n        this.getListRoomDetails();\n    }\n\n    handleChangeRoomIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            roomidselected: val['value'],\n            statusSelected: ''\n        }, () => {\n            let filter = {'id': 'roomid', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    handleChangeStatusIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            statusSelected: val['value'],\n            roomidselected: ''\n        }, () => {\n            let filter = {'id': 'status', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    renderSearchForm() {\n        if (this.state.isLoadedParam == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Loading</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        let listRoomIds = this.state.roomIds;\n        let listStatusIds = this.state.statusIds;\n        let styleDisable = {'pointerEvents': ''};\n        // debugger;\n        if (!this.state.isLoadedRooms || !this.state.isLoadedParam) {\n            styleDisable = {'pointerEvents': 'none'};\n        }\n        var newlistRoomIds = '';\n        if (listRoomIds.length > 0) {\n            listRoomIds.map((item) => {\n                let tmp = {\n                    title: item.key,\n                    description: item.text\n                }\n                item['title'] = item.key;\n                item['description'] = item.text;\n            });\n        }\n        return (\n            <Segment padded style={styleDisable}>\n                {/*{listRoomIds.length > 0 && <SearchingTab listRoomId={listRoomIds}/>}*/}\n                {/*<Input fluid icon='search plus' action='Search' placeholder='Search...'/>*/}\n                <Label attached='top left' onClick={this.handleClearSearching}>Refresh</Label>\n                <br/>\n                <Form.Group widths='equal'>\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo Phòng'\n                        value={this.state.roomidselected}\n                        onChange={this.handleChangeRoomIDSelect}\n                        options={listRoomIds}\n                        placeholder='RoomIDs'\n                    />\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo trạng thái'\n                        value={this.state.statusSelected}\n                        options={listStatusIds}\n                        onChange={this.handleChangeStatusIDSelect}\n                        placeholder='Status'\n                    />\n                </Form.Group>\n            </Segment>\n        );\n    }\n\n    renderListRooms() {\n        const {rooms, statusIds, roomTypeOtherIds, listoptionIds, listoption} = {...this.state};\n\n        if (this.state.isLoadedRooms == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Loading</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        return (\n            <Segment padded>\n                <Label attached='top'>Room List</Label>\n                <ListRoomRows roomsInfo={rooms}\n                              statusList={statusIds}\n                              roomTypeOther={roomTypeOtherIds}\n                              listoptionIds={listoptionIds}\n                              listoption={listoption}\n                              UpdateCheckInRoom={this.UpdateCheckInRoom}\n                              CheckoutRoom={this.CheckoutRoom}\n                />\n            </Segment>\n        );\n    }\n\n    async sha256(message) {\n        console.log(encrypt(\"bangth\"));\n    }\n\n\n    getIPAddress() {\n        // var https = require('https');\n        // var callback = function(err, ip){\n        //     if(err){\n        //         return console.log(err);\n        //     }\n        //     console.log('Our public IP is', ip);\n        //     // do something here with the IP address\n        // };\n        // https.get({\n        //     host: 'api.ipify.org',\n        // }, function(response) {\n        //     var ip = '';\n        //     response.on('data', function(d) {\n        //         ip += d;\n        //     });\n        //     response.on('end', function() {\n        //         if(ip){\n        //             callback(null, ip);\n        //         } else {\n        //             callback('could not get public ip address :(');\n        //         }\n        //     });\n        // });\n        // sessionStorage.setItem('key', 'value');\n\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    this.setState({\n                        ipadd: result[\"ip\"],\n                    })\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    componentDidMount() {\n        console.log(this.props.userInfo);\n        this.getIPAddress();\n        this.getListRoomDetails();\n        this.getListStatus();\n        this.getroomTypeOther();\n        this.getlistoption();\n    }\n\n    render() {\n        // console.log(this.state.statusIds);\n        // console.log(this.state.statusSelected);\n        return (\n            <div>\n                {/*<ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>*/}\n                <Form>\n                    {this.renderSearchForm()}\n                    {this.renderListRooms()}\n                </Form>\n                <br/><br/>\n            </div>\n        );\n    }\n}\n\nIndexPage.propTypes = {\n    userInfo: PropTypes.object\n}"]},"metadata":{},"sourceType":"module"}