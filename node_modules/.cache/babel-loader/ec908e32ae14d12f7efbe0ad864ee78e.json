{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = momentLocalizer;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _configure = _interopRequireDefault(require(\"react-widgets/lib/configure\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nif (typeof _moment.default !== 'function') throw new TypeError('You must provide a valid moment object');\nvar localField = typeof (0, _moment.default)().locale === 'function' ? 'locale' : 'lang',\n    hasLocaleData = !!_moment.default.localeData;\nif (!hasLocaleData) throw new TypeError('The Moment localizer depends on the `localeData` api, please provide a moment object v2.2.0 or higher');\n\nfunction getMoment(culture, value, format) {\n  return culture ? (0, _moment.default)(value, format, true)[localField](culture) : (0, _moment.default)(value, format, true);\n}\n\nfunction endOfDecade(date) {\n  return (0, _moment.default)(date).add(10, 'year').add(-1, 'millisecond').toDate();\n}\n\nfunction endOfCentury(date) {\n  return (0, _moment.default)(date).add(100, 'year').add(-1, 'millisecond').toDate();\n}\n\nfunction momentLocalizer() {\n  var localizer = {\n    formats: {\n      date: 'L',\n      time: 'LT',\n      default: 'lll',\n      header: 'MMMM YYYY',\n      footer: 'LL',\n      weekday: 'dd',\n      dayOfMonth: 'DD',\n      month: 'MMM',\n      year: 'YYYY',\n      decade: function decade(date, culture, localizer) {\n        return localizer.format(date, 'YYYY', culture) + ' - ' + localizer.format(endOfDecade(date), 'YYYY', culture);\n      },\n      century: function century(date, culture, localizer) {\n        return localizer.format(date, 'YYYY', culture) + ' - ' + localizer.format(endOfCentury(date), 'YYYY', culture);\n      }\n    },\n    firstOfWeek: function firstOfWeek(culture) {\n      return _moment.default.localeData(culture).firstDayOfWeek();\n    },\n    parse: function parse(value, format, culture) {\n      if (!value) return null;\n      var m = getMoment(culture, value, format);\n      if (m.isValid()) return m.toDate();\n      return null;\n    },\n    format: function format(value, _format, culture) {\n      return getMoment(culture, value).format(_format);\n    }\n  };\n\n  _configure.default.setDateLocalizer(localizer);\n}\n\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}