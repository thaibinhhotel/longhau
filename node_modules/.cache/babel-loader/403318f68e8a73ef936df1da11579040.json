{"ast":null,"code":"import _defineProperty from \"/Users/bangth/Desktop/TBHotel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/bangth/Desktop/TBHotel/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { IndexPage } from './containers/IndexPage';\nimport { LoginPage } from './containers/LoginPage';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dimmer, Image, Loader, Segment } from 'semantic-ui-react';\nimport { ToastContainer } from \"react-toastify\";\n\nclass ThaiBinhHotel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isTokenValid: false,\n      userInfo: {\n        token: sessionStorage.getItem('tokenTBh'),\n        email: sessionStorage.getItem('emailTBh'),\n        ipAddress: \"\"\n      },\n      isChecking: true\n    };\n    ['checkTokenValid', 'getIPAndCheckToken', 'setTokenValid'].forEach(method => this[method] = this[method].bind(this));\n  }\n\n  setTokenValid(username, token) {\n    // debugger;\n    let userInfo = _objectSpread({}, this.state.userInfo);\n\n    userInfo.email = username;\n    userInfo.token = token;\n    this.setState({\n      isTokenValid: true,\n      userInfo: userInfo\n    });\n  }\n\n  getIPAndCheckToken() {\n    this.setState({\n      isChecking: true\n    });\n    fetch(\"https://api.ipify.org/?format=json\", {\n      method: \"GET\",\n      // body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result[\"ip\"]);\n\n      let userInfo = _objectSpread({}, this.state.userInfo);\n\n      userInfo['ipAddress'] = result[\"ip\"];\n      this.setState({\n        userInfo: userInfo\n      });\n\n      if (!this.state.userInfo.token) {\n        this.setState({\n          isChecking: false\n        });\n        return;\n      }\n\n      this.checkTokenValid(result[\"ip\"]);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  async checkTokenValid(ipAddress) {\n    // let token = sessionStorage.getItem('tokenTBh');\n    // let email = sessionStorage.getItem('emailTBh');\n    // let ipAddress = this.getIPAddress();\n    let encoded = \"token=\" + this.state.userInfo.token + \"&email=\" + this.state.userInfo.email + \"&ipAddress=\" + ipAddress;\n    console.log(encoded);\n    let isValid = false;\n    fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkToken', {\n      method: 'POST',\n      body: encoded,\n      headers: {\n        \"Content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(async function (response) {\n      let msgerr = '';\n      await response.json().then(function (data) {\n        console.log(data);\n        data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n      });\n    }).then(() => {\n      if (isValid) {\n        this.setState({\n          isTokenValid: true,\n          isChecking: false\n        });\n      } else {\n        this.setState({\n          isTokenValid: false,\n          isChecking: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    // sessionStorage.setItem('tokenTBh', 'fb28ea0172706c801ce7d4e1d4edcb5f');\n    // sessionStorage.setItem('emailTBh', 'bang.th@mobivi.vn');\n    if (!this.state.userInfo.token) {\n      this.setState({\n        isTokenValid: false,\n        isChecking: false\n      });\n    }\n\n    this.getIPAndCheckToken();\n  }\n\n  render() {\n    let isTokenValid = this.state.isTokenValid;\n\n    if (this.state.isChecking) {\n      // return <Loader size=\"massive\" active inline='centered'>System is checking your permission...</Loader>\n      return React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Dimmer, {\n        active: true,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"System is checking your permission...\")), React.createElement(Image, {\n        src: \"images/loader.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      style: {\n        fontSize: '20px',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), isTokenValid ? React.createElement(IndexPage, {\n      userInfo: this.state.userInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }) : React.createElement(LoginPage, {\n      ipAddress: this.state.userInfo.ipAddress,\n      setTokenValid: this.setTokenValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(ThaiBinhHotel, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nserviceWorker.register();","map":{"version":3,"sources":["/Users/bangth/Desktop/TBHotel/src/index.js"],"names":["React","ReactDOM","IndexPage","LoginPage","serviceWorker","Dimmer","Image","Loader","Segment","ToastContainer","ThaiBinhHotel","Component","constructor","props","state","isTokenValid","userInfo","token","sessionStorage","getItem","email","ipAddress","isChecking","forEach","method","bind","setTokenValid","username","setState","getIPAndCheckToken","fetch","headers","then","res","json","result","console","log","checkTokenValid","error","encoded","isValid","body","response","msgerr","data","JSON","stringify","componentDidMount","render","fontSize","textAlign","document","getElementById","register"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {IndexPage} from './containers/IndexPage';\nimport {LoginPage} from './containers/LoginPage';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n    Dimmer, Image,\n    Loader, Segment\n} from 'semantic-ui-react';\nimport {ToastContainer} from \"react-toastify\";\n\nclass ThaiBinhHotel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTokenValid: false,\n            userInfo: {\n                token: sessionStorage.getItem('tokenTBh'),\n                email: sessionStorage.getItem('emailTBh'),\n                ipAddress: \"\"\n            },\n            isChecking: true,\n        };\n        [\n            'checkTokenValid',\n            'getIPAndCheckToken',\n            'setTokenValid'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    setTokenValid(username, token) {\n        // debugger;\n        let userInfo = {...this.state.userInfo};\n        userInfo.email = username;\n        userInfo.token = token\n        this.setState({\n            isTokenValid: true,\n            userInfo: userInfo\n        });\n    }\n\n    getIPAndCheckToken() {\n        this.setState({\n            isChecking: true,\n        });\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result[\"ip\"]);\n\n                    let userInfo = {...this.state.userInfo};\n                    userInfo['ipAddress'] = result[\"ip\"]\n                    this.setState({\n                        userInfo: userInfo\n                    });\n\n                    if (!this.state.userInfo.token) {\n                        this.setState({\n                            isChecking: false\n                        });\n                        return;\n                    }\n\n                    this.checkTokenValid(result[\"ip\"])\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    async checkTokenValid(ipAddress) {\n        // let token = sessionStorage.getItem('tokenTBh');\n        // let email = sessionStorage.getItem('emailTBh');\n        // let ipAddress = this.getIPAddress();\n        let encoded = \"token=\" + this.state.userInfo.token +\n            \"&email=\" + this.state.userInfo.email +\n            \"&ipAddress=\" + ipAddress;\n\n        console.log(encoded);\n\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkToken', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n                console.log(data);\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n            });\n        }).then(() => {\n            if (isValid) {\n                this.setState({\n                    isTokenValid: true,\n                    isChecking: false\n                });\n            } else {\n                this.setState({\n                    isTokenValid: false,\n                    isChecking: false\n                });\n            }\n        })\n    }\n\n    componentDidMount() {\n        // sessionStorage.setItem('tokenTBh', 'fb28ea0172706c801ce7d4e1d4edcb5f');\n        // sessionStorage.setItem('emailTBh', 'bang.th@mobivi.vn');\n        if (!this.state.userInfo.token) {\n            this.setState({\n                isTokenValid: false,\n                isChecking: false\n            });\n        }\n        this.getIPAndCheckToken();\n    }\n\n    render() {\n        let isTokenValid = this.state.isTokenValid;\n        if (this.state.isChecking) {\n            // return <Loader size=\"massive\" active inline='centered'>System is checking your permission...</Loader>\n            return <Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>System is checking your permission...</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>\n        }\n        return (\n            <div>\n                <ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>\n                {isTokenValid ?\n                    <IndexPage userInfo={this.state.userInfo}/>\n                    :\n                    <LoginPage ipAddress={this.state.userInfo.ipAddress} setTokenValid={this.setTokenValid}/>}\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<ThaiBinhHotel/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}