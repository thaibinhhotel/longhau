{"ast":null,"code":"var _jsxFileName = \"/Users/bangth/Desktop/TBHotel/src/components/ConfirmFinalMessage.js\";\nimport React, { Component } from 'react';\nimport { Button, Header, Icon, Modal, Loader, Dimmer } from 'semantic-ui-react';\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nconst isMobile = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return navigator.userAgent.match(/IEMobile/i);\n  },\n  any: function () {\n    return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows();\n  }\n};\nexport class ConfirmFinalMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpen = () => {\n      this.setState({\n        modalOpen: true\n      }); // this.props.getRoomCheckoutInfo();\n    };\n\n    this.handleClose = () => this.setState({\n      modalOpen: false\n    });\n\n    this.state = {\n      modalOpen: true,\n      checkoutInfo: this.props.checkoutInfo\n    };\n    this.checkoutRoomSubmit = this.checkoutRoomSubmit.bind(this);\n  } // componentDidMount() {\n  //     this.getCheckoutInfo();\n  // }\n  //\n  // componentWillReceiveProps(nextProps) {\n  //     console.log(nextProps);\n  // }\n\n\n  async checkoutRoomSubmit() {}\n\n  render() {\n    // this.getCheckoutInfo();\n    console.log(this.props.checkoutInfo);\n    return React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        style: {\n          display: this.props.roominfo.status == 0 ? '' : 'none'\n        },\n        primary: true,\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"CheckOut\"),\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      basic: true,\n      size: \"small\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: \"browser\",\n      content: \"Check final list.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"This website uses cookies to ensure the best user experience.\"), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"green\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \" Confirm & CheckOut\"), React.createElement(Button, {\n      color: \"green\",\n      onClick: this.handleClose,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" Close\"))));\n  }\n\n}\nConfirmFinalMessage.propTypes = {\n  checkoutInfo: PropTypes.object,\n  CheckoutRoom: PropTypes.func,\n  getRoomCheckoutInfo: PropTypes.func\n};","map":{"version":3,"sources":["/Users/bangth/Desktop/TBHotel/src/components/ConfirmFinalMessage.js"],"names":["React","Component","Button","Header","Icon","Modal","Loader","Dimmer","PropTypes","toast","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","ConfirmFinalMessage","constructor","props","handleOpen","setState","modalOpen","handleClose","state","checkoutInfo","checkoutRoomSubmit","bind","render","console","log","display","roominfo","status","propTypes","object","CheckoutRoom","func","getRoomCheckoutInfo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Button, Header, Icon, Modal, Loader, Dimmer} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport {toast} from \"react-toastify\";\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class ConfirmFinalMessage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalOpen: true,\n            checkoutInfo: this.props.checkoutInfo\n        };\n\n        this.checkoutRoomSubmit = this.checkoutRoomSubmit.bind(this);\n    }\n\n    // componentDidMount() {\n    //     this.getCheckoutInfo();\n    // }\n    //\n    // componentWillReceiveProps(nextProps) {\n    //     console.log(nextProps);\n    // }\n\n    handleOpen = () => {\n        this.setState({modalOpen: true});\n        // this.props.getRoomCheckoutInfo();\n    }\n\n    handleClose = () => this.setState({modalOpen: false})\n\n    async checkoutRoomSubmit() {\n\n    }\n\n    render() {\n        // this.getCheckoutInfo();\n        console.log(this.props.checkoutInfo);\n\n\n        return (\n            <Modal\n                trigger={<Button style={{display: (this.props.roominfo.status == 0 ? '' : 'none')}} primary\n                                 onClick={this.handleOpen}>CheckOut</Button>}\n                open={this.state.modalOpen}\n                onClose={this.handleClose}\n                basic\n                size='small'\n                centered\n            >\n                <Header icon='browser' content='Check final list.'/>\n\n                    <Modal.Content>\n                        <h3>\n                            This website uses cookies to ensure the best user experience.\n\n                        </h3>\n                        <Modal.Actions>\n                            <Button color='green' inverted>\n                                <Icon name='checkmark'/> Confirm & CheckOut\n                            </Button>\n                            <Button color='green' onClick={this.handleClose}  inverted>\n                                <Icon name='checkmark'/> Close\n                            </Button>\n                        </Modal.Actions>\n                    </Modal.Content>\n            </Modal>\n        )\n    }\n}\n\nConfirmFinalMessage.propTypes = {\n    checkoutInfo: PropTypes.object,\n    CheckoutRoom: PropTypes.func,\n    getRoomCheckoutInfo: PropTypes.func\n}"]},"metadata":{},"sourceType":"module"}